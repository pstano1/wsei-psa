@model libApp.ViewModels.BookDetailsViewModel

@{
    ViewData["Title"] = "Books";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>

    <div>
        <h4>Book</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Title)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Book.Title)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Genre)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Book.Genre)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.Quantity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Book.Quantity)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.Book.AvailableQuantity)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Book.AvailableQuantity)
            </dd>
        </dl>
    </div>
    <h4>History</h4>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Student
                </th>
                <th>
                    Borrowed at
                </th>
                <th>
                    Returned at
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bookCustomer in Model.Customers.SelectMany(c => c.BookCustomers))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => bookCustomer.Customer.FullName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => bookCustomer.BorrowDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => bookCustomer.ReturnDate)
                    </td>
                    <td>
                        @if (bookCustomer.ReturnDate == null)
                        {
                            <form method="post" asp-controller="Books" asp-action="Reserve" asp-route-id="@Model.Book.Id">
                                <input type="hidden" name="bc.ID" value="@bookCustomer.ID" />
                                <button type="submit">Return</button>
                            </form>
                        }
                        else
                        {
                            <button type="button" disabled>Return</button>
                        }
                    </td>
                </tr>
            }
        </tbody>
        </table>
        <div>
            <a asp-action="Edit" asp-route-id="@Model?.Book.Id">Edit</a> |
            <a asp-action="Index">Back to List</a>
        </div>
</body>
</html>
